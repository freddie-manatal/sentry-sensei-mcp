name: Release

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: write
  pull-requests: write
  deployments: write
  statuses: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build_docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Documentation
        run: npm run docs:build

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          path: docs/build/

  deploy:
    runs-on: ubuntu-latest
    needs: build_docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-artifacts
          path: docs/build/

      - name: Setup Node.js for deployment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies for functions
        run: npm ci --production

      - name: Copy docs to root for Netlify
        run: |
          mkdir -p public
          cp -r docs/build/* public/

      - name: Copy functions to deployment
        run: |
          mkdir -p netlify/functions
          cp -r netlify/functions/* ./netlify/functions/ 2>/dev/null || echo "Functions already in place"

      - name: Deploy to Netlify (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './public'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions - ${{ github.event.head_commit.message }}'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          netlify-config-path: ./netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

      - name: Deploy to Netlify (Preview)
        if: github.event_name == 'pull_request'
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './public'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy PR #${{ github.event.number }} - ${{ github.event.pull_request.title }}'
          alias: 'pr-${{ github.event.number }}'
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
          netlify-config-path: ./netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 2
